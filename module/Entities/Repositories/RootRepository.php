<?php
namespace Entities\Repositories;

/**
 * Repositories/RootRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

use Composer\Repository\RepositoryManager;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Repository\RepositoryFactory;

class RootRepository
{
    private  $entity;
    function  __construct($entity)
    {
        $this->entity=$entity;
    }

    public function getLastOrderUsers()
    {
        $rsm = new ResultSetMapping();
        $query = $this->entity->createNativeQuery('SELECT
                T.user_id AS user_id,
                users.name AS user_name,
                product_id,
                T.max_id AS user_product_id,
                products.name AS product_name,
                products.price AS product_price,
                products.created AS product_created_date,
                users_product.dt_created AS date_added_to_order
            FROM
                (
                SELECT
                    user_id,
                    MAX(id) AS max_id
                FROM
                    users_product
                GROUP BY
                    user_id
            ) AS T
            LEFT JOIN users_product ON T.max_id = users_product.id
            LEFT JOIN products ON users_product.product_id = products.id
            LEFT JOIN users ON T.user_id = users.id
            ORDER by users_product.dt_created', $rsm);

        $rsm->addScalarResult('user_id','user_id');
        $rsm->addScalarResult('user_name','user_name');
        $rsm->addScalarResult('product_id','product_id');
        $rsm->addScalarResult('user_product_id','user_product_id');
        $rsm->addScalarResult('product_name','product_name');
        $rsm->addScalarResult('product_price','product_price');
        $rsm->addScalarResult('product_created_date','product_created_date');
        $rsm->addScalarResult('date_added_to_order','date_added_to_order');
        return $query->getResult();
    }
}
